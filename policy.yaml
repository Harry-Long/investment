version: 1
data:
  source: yfinance                     # options: stooq, synthetic, yfinance
  use_yfinance: true                   # enable Yahoo metadata/fundamentals
  yfinance_chunk_size: 20              # optional rate-limit controls (default 50)
  yfinance_call_delay: 0.6            # seconds sleep between chunks
  yfinance_max_retries: 5              # retry attempts when rate limited
  yfinance_retry_backoff: 2.0          # exponential backoff factor for retries
  cache:
    enabled: true
    dir: data/cache
    expiry_days: 3
  universe_file: data/universe/universe.txt
  universe: []                      # fallback if file not provided
  start: 2018-01-01
  end: null
  benchmark: SPY.US

candidate_pool:
  target_size: 200
  tolerance: 10
  data_source: provider_default
  base_universe_file: data/universe/sp1500.txt
  exclude:
    etf: true
    adr: true
    penny: true
    st: false
  base_filters:
    min_price: 5.0
    min_mcap: 1500000000
    min_adv20: 5000000
    min_days_listed: 180
  factors:
    momentum: 0.30
    quality: 0.25
    value: 0.20
    stability: 0.15
    liquidity: 0.10
  neutralize:
    by_sector: true
    cap_bucket: true
  constraints:
    max_per_sector: 0.25
    max_weight_single: 0.01
  persistence:
    out_dir: data/universe
    save_snapshot: true
    write_symlink: true

portfolio:
  mode: buffet

  # asset count constraints
  min_count: 5
  max_count: 15
  target_count: 10

  # selection method before optimization
  selection:
    method: top_by_sharpe          # options: top_by_1y_return, top_by_sharpe, none
    lookback_days: 252

  # optimization objective and parameters
  optimization:
    engine: multi_objective        # options: pyportfolioopt, multi_objective
    objective: max_sharpe          # options: max_sharpe, min_volatility, efficient_risk, efficient_return, max_quadratic_utility
    risk_free_rate: 0.0
    l2_gamma: 0.001
    weight_bounds: [0.0, 0.35]
    target_volatility: 0.12        # used only if objective=efficient_risk
    target_return: 0.10            # used only if objective=efficient_return
    risk_aversion: 1.0             # used only if objective=max_quadratic_utility
    multi_objective:               # used only if engine=multi_objective
      objectives:
        maximize_sharpe: 0.4
        maximize_return: 0.2
        minimize_volatility: 0.2
        minimize_max_drawdown: 0.2
      targets:
        target_volatility: 0.18
        target_max_drawdown: 0.30
      long_only: true
      min_weight: 0.0
      max_weight: 0.7
      leverage: 1.0

  # concentration rules (applied only if mode=buffet)
  concentration:
    enforce: false  # true or false
    top_k: 5
    top_k_min_share: 0.50

  # optional backtesting block for optimisation output
  backtest:
    enabled: true            # true or false
    method: walk_forward             # options: in_sample, walk_forward
    rebalance_freq: Q             # M=monthly, Q=quarterly, A=annual
    train_years: 5
    test_years: 1
    transaction_cost_bps: 5
    risk_free_rate: 0.0

execution:
  rebalance: none
  fee_rate: 0.0000

reporting:
  output_dir: output
  export_extras: true
  title: "Static Portfolio Allocation Report"
  var_alpha: 0.95

notes:
  - "Run with: python portfolio_agent/run.py [optional_config_path]."
  - "Update data.universe_file or data.universe to control the asset list."
  - "All analysis is for educational purposes only."
